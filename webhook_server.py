from flask import Flask, request, jsonify
import os
import sys
from datetime import datetime
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

app = Flask(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –±–æ—Ç–∞
bot = None

@app.route('/webhook/yookassa', methods=['POST', 'GET'])
def yookassa_webhook():
    """Endpoint –¥–ª—è –≤–µ–±—Ö—É–∫–æ–≤ –æ—Ç –ÆKassa"""
    try:
        if request.method == 'GET':
            logger.info("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –≤–µ–±—Ö—É–∫–∞ –æ—Ç –ÆKassa")
            return jsonify({
                "status": "ready", 
                "service": "yookassa-webhook",
                "timestamp": datetime.now().isoformat()
            }), 200
            
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ POST –∑–∞–ø—Ä–æ—Å–æ–≤ (–≤–µ–±—Ö—É–∫–æ–≤)
        webhook_data = request.json
        logger.info(f"üîî –ü–æ–ª—É—á–µ–Ω –≤–µ–±—Ö—É–∫ –æ—Ç –ÆKassa: {webhook_data.get('event')}")
        
        if bot and hasattr(bot, 'payment_handler'):
            success = bot.payment_handler.process_webhook(webhook_data)
            logger.info(f"üìä –í–µ–±—Ö—É–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω: {success}")
            return jsonify({"success": success}), 200
        else:
            logger.error("‚ùå –ë–æ—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ –≤–µ–±—Ö—É–∫-—Å–µ—Ä–≤–µ—Ä–µ")
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–µ–±—Ö—É–∫ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
            return jsonify({"error": "Bot not initialized", "received": True}), 202
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –≤–µ–±—Ö—É–∫–µ: {e}")
        return jsonify({"error": str(e)}), 500

@app.route('/health', methods=['GET'])
def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞"""
    return jsonify({
        "status": "healthy", 
        "service": "yookassa-webhook",
        "timestamp": datetime.now().isoformat(),
        "bot_initialized": bot is not None
    })

@app.route('/')
def home():
    return jsonify({
        "message": "Yookassa Webhook Server", 
        "status": "active",
        "endpoints": {
            "webhook": "/webhook/yookassa [GET, POST]",
            "health": "/health [GET]"
        }
    })

def init_bot():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –¥–ª—è –≤–µ–±—Ö—É–∫-—Å–µ—Ä–≤–µ—Ä–∞"""
    global bot
    try:
        from bot_deepseek import DeepSeekPsychoBot
        bot = DeepSeekPsychoBot()
        logger.info("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ –≤–µ–±—Ö—É–∫-—Å–µ—Ä–≤–µ—Ä–µ")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞: {e}")
        bot = None

if __name__ == '__main__':
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    init_bot()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    port = int(os.getenv('PORT', 5000))
    host = '0.0.0.0'
    
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ –≤–µ–±—Ö—É–∫-—Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ {host}:{port}")
    app.run(host=host, port=port, debug=False)